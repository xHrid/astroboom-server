{"version":3,"file":"js/460.82a9da85.js","mappings":"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","sources":["webpack://fighers/./src/views/GameView.vue","webpack://fighers/./src/components/TurnBasedGame.vue","webpack://fighers/./src/js/colorCode.js","webpack://fighers/./src/js/blockStates.js","webpack://fighers/./src/mixins/mapMixins.js","webpack://fighers/./node_modules/engine.io-parser/build/esm/commons.js","webpack://fighers/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://fighers/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://fighers/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://fighers/./node_modules/engine.io-parser/build/esm/index.js","webpack://fighers/./node_modules/@socket.io/component-emitter/index.mjs","webpack://fighers/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://fighers/./node_modules/engine.io-client/build/esm/util.js","webpack://fighers/./node_modules/engine.io-client/build/esm/transport.js","webpack://fighers/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://fighers/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://fighers/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://fighers/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://fighers/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://fighers/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://fighers/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://fighers/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://fighers/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://fighers/./node_modules/engine.io-client/build/esm/socket.js","webpack://fighers/./node_modules/engine.io-client/build/esm/index.js","webpack://fighers/./node_modules/socket.io-client/build/esm/url.js","webpack://fighers/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://fighers/./node_modules/socket.io-parser/build/esm/binary.js","webpack://fighers/./node_modules/socket.io-parser/build/esm/index.js","webpack://fighers/./node_modules/socket.io-client/build/esm/on.js","webpack://fighers/./node_modules/socket.io-client/build/esm/socket.js","webpack://fighers/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://fighers/./node_modules/socket.io-client/build/esm/manager.js","webpack://fighers/./node_modules/socket.io-client/build/esm/index.js","webpack://fighers/./src/js/emitNames.js","webpack://fighers/./src/mixins/socketMixins.js","webpack://fighers/./src/mixins/eventHandlerMixins.js","webpack://fighers/./src/mixins/renderWSmixins.js","webpack://fighers/./src/mixins/connectionRelatedMixins.js","webpack://fighers/./src/mixins/cellMixins.js","webpack://fighers/src/components/TurnBasedGame.vue","webpack://fighers/./src/components/TurnBasedGame.vue?5e09","webpack://fighers/./src/components/TurnBasedGame.vue?0715","webpack://fighers/src/views/GameView.vue","webpack://fighers/./src/views/GameView.vue?5aa0","webpack://fighers/./src/views/GameView.vue?d6a4","webpack://fighers/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://fighers/./node_modules/core-js/internals/regexp-flags.js","webpack://fighers/./node_modules/core-js/modules/es.regexp.flags.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"outer\"},[_c('TurnBasedGameVue')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"game-outer\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.gameEnded),expression:\"gameEnded\"}],staticClass:\"gameOver\"},[_c('div',{staticClass:\"center-div\"},[_c('div',{staticClass:\"winText\"},[_vm._v(\" \"+_vm._s(_vm.endText)+\" \")]),_c('a',{staticClass:\"play-button\",attrs:{\"href\":\"lobby\"}},[_vm._v(\"Next Match\")])])]),(_vm.mode == 'c')?_c('div',[_vm._v(\"Your match code is : \"+_vm._s(_vm.lobbyCode))]):_vm._e(),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.start),expression:\"!start\"}],ref:\"waiting-canvas\"}),_c('div',{staticClass:\"instruction-wrapper\"},[_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.start),expression:\"start\"}],ref:\"game-canvas\"}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.start),expression:\"start\"}],staticClass:\"instruction-text\"},[_vm._v(_vm._s(_vm.instructionText))]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.start && !_vm.gameEnded),expression:\"start && !gameEnded\"}],staticClass:\"contoller\"},[_c('button',{attrs:{\"disabled\":!_vm.yourTurn || _vm.moveSelected == 'build' || _vm.canNotBuild},on:{\"click\":_vm.buildingMode}},[_vm._v(\" Build \")]),_c('button',{attrs:{\"disabled\":!_vm.yourTurn || _vm.moveSelected == 'attack'},on:{\"click\":_vm.attackingMode}},[_vm._v(\" Attack \")]),_c('button',{attrs:{\"disabled\":!_vm.validMove},on:{\"click\":_vm.go}},[_vm._v(\"Go\")])])]),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.start),expression:\"start\"}],ref:\"asteroid-canvas\",staticClass:\"asteroid-canvas\"})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\r\n    background: \"rgb(100, 255, 150)\",\r\n    existsColor: \"rgb(100, 100, 150)\",\r\n    notDestroyedColor: \"rgb(100, 100, 150)\",\r\n    destroedColor: \"rgb(200, 50, 0)\",\r\n    buildArena: \"rgb(0, 230, 200)\",\r\n    attackArena: \"rgb(200, 230, 0)\",\r\n    hovering: \"rgb(0, 50, 100)\",\r\n    selected: \"rgb(100, 255, 100)\",\r\n    potentialSelect: \"rgb(100, 50, 100)\",\r\n    player: \"rgb(100, 50, 255)\",\r\n    safeSquare: \"rgb(0, 50, 255)\"\r\n}","export default {\r\n    normal: \"normal\",\r\n    seletected: \"selected\",\r\n    hovering: \"hovering\",\r\n    potentialSelect: \"potentialSelect\",\r\n    player: \"player\"\r\n}","import blockStates from \"@/js/blockStates\";\r\n\r\nexport default {\r\n\r\n  methods: {\r\n    renderMap(map) {\r\n      let j = 2;\r\n\r\n      if (map.length == 0) return;\r\n      map.forEach((cell) => {\r\n        if (cell.destroyed)\r\n          j = 6;\r\n        else if (cell.status == blockStates.seletected)\r\n          j = 0;\r\n        else if (cell.status == blockStates.hovering)\r\n          j = 1\r\n        else if (cell.status == blockStates.potentialSelect)\r\n          j = 3\r\n        else j = 2;\r\n\r\n        this.ctx.drawImage(this.bunkerSS,\r\n          this.bunkerImgSize*j, 0, this.bunkerImgSize, this.bunkerImgSize,\r\n           cell.x, cell.y, cell.w, cell.h)\r\n      });\r\n\r\n      if (this.start) {\r\n        const cell =\r\n          this.p1Map[this.playerPostion.i * 2 + this.playerPostion.j];\r\n        this.ctx.globalAlpha = 0.5;\r\n        j = 5;\r\n        if (!this.gameEnded) this.ctx.drawImage(this.bunkerSS,\r\n          this.bunkerImgSize*j, 0, this.bunkerImgSize, this.bunkerImgSize,\r\n           cell.x, cell.y, cell.w, cell.h)\r\n        this.ctx.globalAlpha = 1;\r\n      }\r\n    },\r\n\r\n    resetMapStatus(pixelMap) {\r\n      if (!pixelMap) return;\r\n      this.activeCells = [];\r\n      pixelMap.forEach((cell) => {\r\n        cell.status = blockStates.normal;\r\n      });\r\n    },\r\n\r\n    arrayMapToPixelMap(map, x, y) {\r\n      map.forEach((cell) => {\r\n        cell.x = cell.j * this.homeSize + x;\r\n        cell.y = cell.i * this.homeSize + y;\r\n        cell.w = this.homeSize*0.9;\r\n        cell.h = this.homeSize*0.9;\r\n      });\r\n    },\r\n\r\n  },\r\n};\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","export default {\r\n    handshake : \"HandShake\",\r\n    p2Details: \"P2Details\",\r\n    p2Disconnected: \"p2Disconnected\",\r\n    upDateState: \"updateState\",\r\n    go: \"go\",\r\n    updateP2: \"updateP2\"\r\n}","import socketio from \"socket.io-client\";\r\nimport emitNames from \"@/js/emitNames\";\r\n\r\nexport default {\r\n  methods: {\r\n    socketinit() {\r\n      this.socket = socketio();\r\n      this.socket.emit(\r\n        emitNames.handshake,\r\n        this.p1Name,\r\n        this.lobbyCode,\r\n        this.mode,\r\n        this.p1Email\r\n      );\r\n      \r\n      this.socket.on(emitNames.p2Details, (obj) => {\r\n        this.matched = true;\r\n        this.p2Name = obj.p2;\r\n        this.p1Map = obj.p1Data;\r\n        this.p2Map = obj.p2Data;\r\n        this.yourTurn = obj.yourTurn;\r\n        this.playerPostion = JSON.parse(JSON.stringify(obj.position));\r\n        console.log(this.playerPostion);\r\n        setTimeout(() => (this.start = true), 2000);\r\n      });\r\n\r\n      this.socket.on(emitNames.p2Disconnected, () => {\r\n        console.log(\"P2 Disconnected\");\r\n        this.start = false;\r\n        this.matched = false;\r\n      });\r\n\r\n      this.socket.on(emitNames.upDateState, (p1Data, p2Data, yourTurn, attackData, canNotBuild, gameOver) => {\r\n\r\n        if (attackData[0] === null){\r\n          if (p1Data) {\r\n            (this.p1Map = JSON.parse(JSON.stringify(p1Data))),\r\n              this.arrayMapToPixelMap(this.p1Map, 100, 100);\r\n          }\r\n\r\n          if (p2Data) {\r\n            (this.p2Map = JSON.parse(JSON.stringify(p2Data))),\r\n              this.arrayMapToPixelMap(this.p2Map, 600, 100);\r\n          }\r\n\r\n          this.yourTurn = yourTurn;\r\n\r\n          \r\n        } else {\r\n          \r\n          if (attackData[1]) {\r\n            this.lastAttackedSquare = {\r\n              x: this.p1Map[attackData[0]].x + this.rect.left - this.homeSize*0.1,\r\n              y: this.p1Map[attackData[0]].y + this.rect.top - this.homeSize*0.2,\r\n            }\r\n          } else {\r\n            this.lastAttackedSquare = {\r\n              x: this.p2Map[attackData[0]].x + this.rect.left - this.homeSize*0.1,\r\n              y: this.p2Map[attackData[0]].y + this.rect.top - this.homeSize*0.2,\r\n            }\r\n\r\n          }\r\n\r\n          this.asteroidAcceleration = this.lastAttackedSquare.y / 200;\r\n\r\n          this.afterAttackAnimationData = {\r\n            p1Data,\r\n            p2Data,\r\n            yourTurn,\r\n            gameOver,\r\n          }\r\n\r\n          this.explosionJ = 0;\r\n          this.explosionX = this.lastAttackedSquare.x;\r\n          this.explosionY = this.lastAttackedSquare.y;\r\n          this.explosionW = this.homeSize;\r\n          this.explosionH = this.homeSize;\r\n\r\n          this.animateAttack();\r\n\r\n          if (gameOver[0]) {\r\n            this.gameEnded = gameOver[0]\r\n            if (gameOver[1]) this.endText = \"You Won!\"\r\n            else this.endText = \"Better Luck next Time\"\r\n            this.socket.disconnect();\r\n\r\n          }\r\n          \r\n          this.resetMapStatus(this.p1Map);\r\n          this.resetMapStatus(this.p2Map);\r\n          \r\n        }\r\n\r\n        this.canNotBuild = canNotBuild;\r\n\r\n        this.moveSelected = null;\r\n        this.validMove = false;\r\n      });\r\n\r\n      this.socket.on(emitNames.updateP2, p2 => {\r\n        this.p2Position = {\r\n          ...p2,\r\n        };\r\n\r\n        // this.lastAttackedSquare = {\r\n        //   x: this.p1Map[attackedSquare].x + this.rect.left,\r\n        //   y: this.p1Map[attackedSquare].y + this.rect.top\r\n        // }\r\n\r\n        // this.animateAttack();\r\n\r\n      });\r\n    },\r\n  },\r\n};\r\n","import emitNames from \"@/js/emitNames\";\r\nimport blockStates from \"@/js/blockStates\";\r\n\r\n\r\nexport default {\r\n    methods: {\r\n        clickHandler(pixelMap, x, y) {\r\n            if (this.returnFlag) {\r\n              this.p1Map.forEach((cell) => {\r\n                if (\r\n                  cell.x < x &&\r\n                  x < cell.x + cell.w &&\r\n                  cell.y < y &&\r\n                  y < cell.y + cell.h\r\n                ) {\r\n                  this.safeSquares.forEach((ss) => {\r\n                    if (ss[0] == cell.i && ss[1] == cell.j) {\r\n                      this.attackingSquare = {\r\n                        x: this.p2Map[this.activeCells[0].i*2 + this.activeCells[0].j].x,\r\n                        y: this.p2Map[this.activeCells[0].i*2 + this.activeCells[0].j].y\r\n                      }\r\n                      this.socket.emit(\r\n                        emitNames.go,\r\n                        this.moveSelected,\r\n                        this.activeCells,\r\n                        { i: cell.i, j: cell.j },\r\n                        this.playerPostion\r\n                      );\r\n                      this.playerPostion.i = cell.i;\r\n                      this.playerPostion.j = cell.j;\r\n                      this.returnFlag = false;\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n              return;\r\n            }\r\n      \r\n            let clickedCell = null;\r\n      \r\n            if (this.activeCells.length >= 2) {\r\n              this.activeCells.forEach(\r\n                (ac) => (pixelMap[ac.i * 2 + ac.j].status = blockStates.normal)\r\n              );\r\n              this.activeCells = [];\r\n            }\r\n      \r\n            if (pixelMap) {\r\n              pixelMap.forEach((cell) => {\r\n                if (\r\n                  cell.x < x &&\r\n                  x < cell.x + cell.w &&\r\n                  cell.y < y &&\r\n                  y < cell.y + cell.h\r\n                ) {\r\n                  clickedCell = {\r\n                    i: cell.i,\r\n                    j: cell.j,\r\n                    status: cell.status,\r\n                    destroyed: cell.destroyed,\r\n                  };\r\n                }\r\n                if (cell.status == blockStates.seletected)\r\n                  if (\r\n                    this.activeCells[0].i != cell.i &&\r\n                    this.activeCells[0].j != cell.j\r\n                  )\r\n                    this.activeCells.push({ i: cell.i, j: cell.j });\r\n      \r\n                cell.status = blockStates.normal;\r\n              });\r\n            }\r\n      \r\n            if (clickedCell && clickedCell.destroyed) return;\r\n      \r\n            let activeClicked = false;\r\n      \r\n            if (clickedCell) {\r\n              this.activeCells.forEach((activeCell) => {\r\n                if (activeCell.i == clickedCell.i && activeCell.j == clickedCell.j) {\r\n                  activeClicked = true;\r\n                } else if (clickedCell.status != blockStates.potentialSelect) {\r\n                  this.activeCells = [];\r\n                }\r\n              });\r\n      \r\n              if (activeClicked) this.resetMapStatus(pixelMap);\r\n              else this.activeCells.push({ i: clickedCell.i, j: clickedCell.j });\r\n      \r\n              this.activeCells.forEach((activeCell) => {\r\n                pixelMap[activeCell.i * 2 + activeCell.j].status =\r\n                  blockStates.seletected;\r\n              });\r\n            } else if (pixelMap) this.resetMapStatus(pixelMap);\r\n          },\r\n    }\r\n}","export default {\r\n    methods: {\r\n        rednerWaitinScreen() {\r\n\r\n            const offSet = this.waitingCanvas.getBoundingClientRect();\r\n            const fontSize = this.cWidth > 500 ? 30 : 16;\r\n            this.wctx.font = `${fontSize}px Arial`;\r\n            this.wctx.fillStyle = \"rgb(150, 255, 255)\";\r\n            this.wctx.fillRect(0, 0, this.cWidth, this.cHeight);\r\n      \r\n            if (!this.matched) {\r\n              this.wctx.fillStyle = \"rgb(255, 255, 255)\";\r\n              this.wctx.fillRect(0, 0, this.cWidth, this.cHeight / 2);\r\n      \r\n              this.wctx.fillStyle = \"rgb(0, 0, 0)\";\r\n              this.wctx.fillText(\r\n                `Looking for an opponent`,\r\n                offSet.left,\r\n                offSet.top + this.cHeight / 10,\r\n                this.cWidth\r\n              );\r\n            } else {\r\n              this.wctx.fillStyle = \"rgb(100, 255, 100)\";\r\n              this.wctx.fillRect(0, 0, this.cWidth, this.cHeight / 2);\r\n      \r\n              this.wctx.fillStyle = \"rgb(0, 0, 0)\";\r\n              this.wctx.fillText(this.p2Name, offSet.left, offSet.top + this.cHeight / 10, this.cWidth);\r\n            }\r\n      \r\n            this.wctx.fillStyle = \"rgb(0, 0, 0)\";\r\n            this.wctx.fillText(this.p1Name, this.cWidth / 10, this.cHeight / 1.5);\r\n        },\r\n    }\r\n}","import blockStates from \"@/js/blockStates\";\r\nimport colorCode from \"@/js/colorCode\";\r\n\r\nexport default {\r\n  methods: {\r\n    elegibleToConnect(pixelMap) {\r\n      pixelMap.forEach((cell) => {\r\n        if (cell.status == blockStates.seletected) {\r\n          const dx = [0, 0, 1, -1];\r\n          const dy = [-1, 1, 0, 0];\r\n\r\n          for (let p = 0; p < 4; p++) {\r\n            const nx = cell.i + dx[p];\r\n            const ny = cell.j + dy[p];\r\n\r\n            if (0 <= nx && nx <= 2 && 0 <= ny && ny <= 1) {\r\n              if (\r\n                pixelMap[nx * 2 + ny].status != blockStates.seletected &&\r\n                pixelMap[nx * 2 + ny].status != blockStates.destroyed\r\n              )\r\n                pixelMap[nx * 2 + ny].status = blockStates.potentialSelect;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    renderConnection(map) {\r\n      map.forEach((b1) => {\r\n        b1.adj.forEach((con) => {\r\n          const b2 = map[con[0] * 2 + con[1]];\r\n\r\n          const w = b2.x - b1.x;\r\n          const h = b2.y - b1.y;\r\n\r\n          this.ctx.fillStyle = \"white\";\r\n          this.ctx.fillRect(\r\n            b1.x + b1.w / 2 - 5,\r\n            b1.y + b1.h / 2 - 5,\r\n            w + 10,\r\n            h + 10\r\n          );\r\n        });\r\n      });\r\n    },\r\n\r\n    renderPotentialConnection() {\r\n      const c1 = this.activeCells[0];\r\n      const c2 = this.activeCells[1];\r\n      const b1 = this.p1Map[c1.i * 2 + c1.j];\r\n      const b2 = this.p1Map[c2.i * 2 + c2.j];\r\n\r\n      const w = b2.x - b1.x;\r\n      const h = b2.y - b1.y;\r\n\r\n      this.ctx.fillStyle = colorCode.selected;\r\n      this.ctx.fillRect(\r\n        b1.x + b1.w / 2 - 5,\r\n        b1.y + b1.h / 2 - 5,\r\n        w + 10,\r\n        h + 10\r\n      );\r\n    },\r\n  },\r\n};\r\n","import blockStates from \"@/js/blockStates\";\r\n\r\nexport default {\r\n  methods: {\r\n    detectHover(pixelMap) {\r\n      pixelMap.forEach((cell) => {\r\n        if (\r\n          cell.status != blockStates.seletected &&\r\n          cell.status != blockStates.potentialSelect\r\n        ) {\r\n          if (\r\n            cell.x < this.mousePosition.x &&\r\n            this.mousePosition.x < cell.x + cell.w &&\r\n            cell.y < this.mousePosition.y &&\r\n            this.mousePosition.y < cell.y + cell.h\r\n          ) {\r\n            if (cell.status != blockStates.destroyed)\r\n              cell.status = blockStates.hovering;\r\n          } else cell.status = blockStates.normal;\r\n        }\r\n      });\r\n    },\r\n\r\n    renderSafeSqares() {\r\n        this.p1Map.forEach((cell) => {\r\n          this.safeSquares.forEach((ss) => {\r\n            if (ss[0] == cell.i && ss[1] == cell.j) {\r\n              this.ctx.drawImage(this.bunkerSS,\r\n                this.bunkerImgSize*7, 0, this.bunkerImgSize, this.bunkerImgSize,\r\n                 cell.x, cell.y, cell.w, cell.h)\r\n            }\r\n          });\r\n        });\r\n      },\r\n  \r\n      generateSafeSqare() {\r\n        this.safeSquares = [];\r\n        let i = 0;\r\n        const visited = [];\r\n        this.safeSquares.push([this.playerPostion.i, this.playerPostion.j]);\r\n        while (i < this.safeSquares.length) {\r\n          this.p1Map[\r\n            this.safeSquares[i][0] * 2 + this.safeSquares[i][1]\r\n          ].adj.forEach((con) => {\r\n            if (!visited.includes(con[0] * 2 + con[1]))\r\n              this.safeSquares.push([...con]);\r\n          });\r\n          visited.push(this.safeSquares[i][0] * 2 + this.safeSquares[i][1]);\r\n          i++;\r\n        }\r\n  \r\n        console.log(\"safe sqares generated, \", this.safeSquares);\r\n      },\r\n\r\n      initiateReturn() {\r\n        this.returnFlag = true;\r\n        this.generateSafeSqare();\r\n        this.renderSafeSqares();\r\n      },\r\n\r\n  },\r\n};\r\n","<template>\r\n  <div class=\"game-outer\">\r\n    <div class=\"gameOver\" v-show=\"gameEnded\">\r\n      <div class=\"center-div\">\r\n        <div class=\"winText\">\r\n          {{endText}}\r\n        </div>\r\n        <a class=\"play-button\" href=\"lobby\">Next Match</a>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"mode == 'c'\" >Your match code is : {{lobbyCode}}</div>\r\n    <canvas v-show=\"!start\" ref=\"waiting-canvas\"></canvas>\r\n    <div class=\"instruction-wrapper\">\r\n      <canvas v-show=\"start\" ref=\"game-canvas\"> </canvas>\r\n      <div class=\"instruction-text\" v-show=\"start\">{{ instructionText }}</div>\r\n      <div v-show=\"start && !gameEnded\" class=\"contoller\">\r\n        <button\r\n          :disabled=\"!yourTurn || moveSelected == 'build' || canNotBuild\"\r\n          @click=\"buildingMode\"\r\n        >\r\n          Build\r\n        </button>\r\n        <button\r\n          :disabled=\"!yourTurn || moveSelected == 'attack'\"\r\n          @click=\"attackingMode\"\r\n        >\r\n          Attack\r\n        </button>\r\n        <button :disabled=\"!validMove\" @click=\"go\">Go</button>\r\n      </div>\r\n    </div>\r\n    <canvas v-show=\"start\"\r\n    ref=\"asteroid-canvas\"\r\n    class=\"asteroid-canvas\"></canvas>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport colorCode from \"@/js/colorCode\";\r\nimport mapMixins from \"@/mixins/mapMixins\";\r\nimport socketMixins from \"@/mixins/socketMixins\";\r\nimport eventHandlerMixins from \"@/mixins/eventHandlerMixins\";\r\nimport renderWSmixins from \"@/mixins/renderWSmixins\";\r\nimport connectionRelatedMixins from \"@/mixins/connectionRelatedMixins\";\r\nimport cellMixins from \"@/mixins/cellMixins\";\r\n\r\nexport default {\r\n  name: \"TurnBasedGameComp\",\r\n\r\n  data() {\r\n    return {\r\n      gameCanvas: null,\r\n      waitingCanvas: null,\r\n      asteroidCanvas: null,\r\n      ctx: null,\r\n      wctx: null,\r\n      actx: null,\r\n      cWidth: 900,\r\n      cHeight: 500,\r\n      rect: {\r\n        left: 0,\r\n        top: 0,\r\n      },\r\n\r\n      homeSize: 120,\r\n      bunkerImgSize: 0,\r\n      exploasionImageSize: 0,\r\n\r\n      asteroidSS: new Image(),\r\n      bunkerSS: new Image(),\r\n      explosionSS: new Image(),\r\n      backgroundSS: new Image(),\r\n\r\n\r\n      p1Map: [],\r\n      p2Map: [],\r\n\r\n      p1MapOffset: {\r\n        i: 0,\r\n        j: 0\r\n      },\r\n\r\n      p2MapOffset: {\r\n        i: 0,\r\n        j: 0\r\n      },\r\n\r\n      mousePosition: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n\r\n      playerPostion: {\r\n        i: 0,\r\n        j: 0,\r\n      },\r\n\r\n      p2Position: null,\r\n      endText: \"\",\r\n\r\n      moveSelected: null,\r\n      activeCells: [],\r\n      attackCell: [],\r\n\r\n      activeMap: null,\r\n      socket: null,\r\n      matched: false,\r\n      start: false,\r\n      yourTurn: false,\r\n      validMove: false,\r\n      p2Name: \"BigBro\",\r\n\r\n      returnFlag: false,\r\n      safeSquares: [],\r\n\r\n      asteroidX: 0,\r\n      asteroidY: -50,\r\n      asteroidSize: 0,\r\n      asteroidJ: 0,\r\n      asteroidsVelocity: 0,\r\n      asteroidAcceleration: 0,\r\n\r\n      explosionX: 0,\r\n      explosionY: 0,\r\n      explosionJ: 0,\r\n      explosionFrameId: null,\r\n      explosionW: 0,\r\n      explosionH: 0,\r\n      explosionNow: 0,\r\n      explosionThen: 0,\r\n      canNotBuild: false,\r\n\r\n      afterAttackAnimationData: null,\r\n\r\n      now: 0,\r\n      then: 0,\r\n\r\n      astroidAnimationId: null,\r\n      gameEnded : false,\r\n\r\n      lastAttackedSquare : {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n\r\n      instructionText: \"\",\r\n      \r\n    };\r\n  },\r\n\r\n  computed: {\r\n    lobbyCode() {\r\n      return this.$store.state.lobbyCode;\r\n    },\r\n    p1Name() {\r\n      return this.$store.state.user.name;\r\n    },\r\n    p1Email() {\r\n      return this.$store.state.user.email;\r\n    },\r\n    mode() {\r\n      return this.$store.state.mode;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    init() {\r\n      this.gameCanvas = this.$refs[\"game-canvas\"];\r\n      this.gameCanvas.width = this.cWidth;\r\n      this.gameCanvas.height = this.cHeight;\r\n      this.ctx = this.gameCanvas.getContext(\"2d\");\r\n\r\n      this.waitingCanvas = this.$refs[\"waiting-canvas\"];\r\n      this.waitingCanvas.width = this.cWidth;\r\n      this.waitingCanvas.height = this.cHeight;\r\n      this.wctx = this.waitingCanvas.getContext(\"2d\");\r\n\r\n      \r\n      this.asteroidCanvas = this.$refs[\"asteroid-canvas\"];\r\n      this.asteroidCanvas.width = this.cWidth;\r\n      this.asteroidCanvas.height = this.cHeight;\r\n      this.actx = this.asteroidCanvas.getContext(\"2d\");\r\n      \r\n      this.asteroidSize = this.asteroidSS.width/4;\r\n      \r\n      this.initDimentions()\r\n      window.addEventListener(\"resize\", ()=> this.initDimentions())\r\n\r\n      this.gameCanvas.addEventListener(\"mousemove\", (event) => {\r\n        this.mousePosition.x = event.clientX - this.rect.left;\r\n        this.mousePosition.y = event.clientY - this.rect.top;\r\n      });\r\n\r\n      this.gameCanvas.addEventListener(\"click\", (e) => {\r\n        const x = e.x - this.rect.left;\r\n        const y = e.y - this.rect.top;\r\n        this.clickHandler(this.activeMap, x, y);\r\n      });\r\n\r\n      \r\n\r\n\r\n      this.animate();\r\n    },\r\n\r\n    initDimentions() {\r\n      this.cWidth = window.innerWidth*0.8,\r\n      this.cHeight =  window.innerHeight*0.8,\r\n      this.homeSize = this.cHeight/5\r\n      this.rect = this.gameCanvas.getBoundingClientRect();\r\n\r\n\r\n      this.p1MapOffset = {\r\n        i: this.cWidth/4 - this.homeSize,\r\n        j: this.cHeight/5,\r\n      }\r\n\r\n      this.p2MapOffset = {\r\n        i: this.cWidth*3/4 - this.homeSize,\r\n        j: this.cHeight/5,\r\n      }\r\n\r\n      if (this.cWidth*1.2  < this.cHeight){\r\n        this.homeSize = this.cHeight/9\r\n\r\n        this.p1MapOffset = {\r\n          i: this.cWidth/2 - this.homeSize,\r\n          j: (this.cHeight/9)*5,\r\n        }\r\n\r\n        this.p2MapOffset = {\r\n          i: this.cWidth/2 - this.homeSize,\r\n          j: (this.cHeight/9),\r\n        }\r\n      }\r\n\r\n              \r\n        this.backgroundH = this.backgroundSS.height;\r\n        this.backgroundW = this.backgroundH/this.cHeight*this.cWidth;\r\n     \r\n        // this.backgroundW = this.backgroundSS.width;\r\n        // this.backgroundH = (this.backgroundW/this.cWidth)*this.cHeight;\r\n      \r\n\r\n      this.gameCanvas.width = this.cWidth;\r\n      this.gameCanvas.height = this.cHeight;\r\n      this.ctx = this.gameCanvas.getContext(\"2d\");\r\n\r\n      this.waitingCanvas.width = this.cWidth;\r\n      this.waitingCanvas.height = this.cHeight;\r\n      this.wctx = this.waitingCanvas.getContext(\"2d\");\r\n\r\n      this.asteroidCanvas.width = this.cWidth;\r\n      this.asteroidCanvas.height = this.cHeight;\r\n      this.actx = this.asteroidCanvas.getContext(\"2d\");\r\n\r\n    },\r\n\r\n    attackingMode() {\r\n      this.moveSelected = \"attack\";\r\n      this.activeMap = this.p2Map;\r\n      this.resetMapStatus(this.p1Map);\r\n    },\r\n\r\n    buildingMode() {\r\n      if (this.moveSelected != \"build\") {\r\n        this.moveSelected = \"build\";\r\n        this.activeMap = this.p1Map;\r\n        this.resetMapStatus(this.p2Map);\r\n      }\r\n    },\r\n\r\n    go() {\r\n      this.yourTurn = false;\r\n      if (this.moveSelected == \"build\")\r\n        this.socket.emit(\"go\", this.moveSelected, this.activeCells);\r\n      else if (this.moveSelected == \"attack\") {\r\n        this.initiateReturn();\r\n      }\r\n    },\r\n\r\n    animateAttack() {\r\n      this.asteroidsVelocity += 0.01;\r\n      this.asteroidX = this.lastAttackedSquare.x + this.homeSize/6;\r\n      if (this.asteroidY < this.lastAttackedSquare.y) {\r\n        this.asteroidY+= this.asteroidsVelocity;\r\n        this.astroidAnimationId = window.requestAnimationFrame(this.animateAttack);\r\n      } else {\r\n        this.asteroidsVelocity = 0\r\n        this.asteroidY = -50;\r\n        this.explosionAnimation()\r\n        window.cancelAnimationFrame(this.astroidAnimationId);\r\n      }\r\n    },\r\n\r\n    explosionAnimation() {\r\n\r\n      this.explosionNow = Date.now();\r\n\r\n      if (this.explosionNow - this.explosionThen > 100) {\r\n        this.explosionThen = this.explosionNow;\r\n        \r\n        if (this.explosionJ < 18) {\r\n          this.actx.clearRect(0, 0, this.cWidth, this.cHeight);\r\n          this.actx.drawImage(this.explosionSS,\r\n          this.exploasionImageSize*this.explosionJ, 0, this.exploasionImageSize, this.exploasionImageSize,\r\n          this.explosionX, this.explosionY, this.explosionW, this.explosionH\r\n          )\r\n          this.explosionJ++;\r\n        } else {\r\n          \r\n          if (this.afterAttackAnimationData.p1Data) {\r\n            (this.p1Map = JSON.parse(JSON.stringify(this.afterAttackAnimationData.p1Data))),\r\n            this.arrayMapToPixelMap(this.p1Map, 100, 100);\r\n          }\r\n          \r\n          if (this.afterAttackAnimationData.p2Data) {\r\n            (this.p2Map = JSON.parse(JSON.stringify(this.afterAttackAnimationData.p2Data))),\r\n            this.arrayMapToPixelMap(this.p2Map, 600, 100);\r\n          }\r\n          \r\n          this.yourTurn = this.afterAttackAnimationData.yourTurn;\r\n         \r\n          window.cancelAnimationFrame(this.explosionFrameId);\r\n          \r\n        }\r\n      }\r\n      if (this.explosionJ < 18)\r\n        this.explosionFrameId = window.requestAnimationFrame(this.explosionAnimation);\r\n      else {\r\n        if (this.afterAttackAnimationData.p1Data) {\r\n          (this.p1Map = JSON.parse(JSON.stringify(this.afterAttackAnimationData.p1Data))),\r\n          this.arrayMapToPixelMap(this.p1Map, 100, 100);\r\n        }\r\n        \r\n        if (this.afterAttackAnimationData.p2Data) {\r\n          (this.p2Map = JSON.parse(JSON.stringify(this.afterAttackAnimationData.p2Data))),\r\n          this.arrayMapToPixelMap(this.p2Map, 600, 100);\r\n        }\r\n        this.actx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n        this.yourTurn = this.afterAttackAnimationData.yourTurn;\r\n        window.cancelAnimationFrame(this.explosionFrameId);\r\n        \r\n      }\r\n\r\n    },  \r\n\r\n\r\n    animate() {\r\n\r\n      this.rednerWaitinScreen();\r\n\r\n      if (this.returnFlag) {\r\n        this.instructionText = \"Select your new position\"\r\n      } else if (!this.yourTurn) {\r\n        this.instructionText = \"Opponent's Turn: waiting\"\r\n      } else if (!this.moveSelected) {\r\n        this.instructionText = \"Select a move\"\r\n      } else if (this.validMove) {\r\n        this.instructionText = \"Goo! if you are ready\"\r\n      } else if (this.moveSelected == \"attack\") {\r\n        this.instructionText = \"Select a block to hit\"\r\n      } else if (this.moveSelected == \"build\") {\r\n        this.instructionText = \"Select any two blocks to make connection\"\r\n      }\r\n\r\n      this.rect = this.gameCanvas.getBoundingClientRect();\r\n      this.ctx.clearRect(0, 0, this.cWidth, this.cHeight);\r\n      this.ctx.fillStyle = \"black\";\r\n      this.ctx.fillRect(0, 0, this.cWidth, this.cHeight);\r\n      this.ctx.drawImage(this.backgroundSS, 0, 0, this.backgroundW, this.backgroundH,\r\n      0, 0, this.cWidth, this.cHeight)\r\n\r\n      if (this.moveSelected == \"build\") {\r\n        this.ctx.globalAlpha = 0.2;\r\n        this.ctx.fillStyle = colorCode.buildArena;\r\n        this.ctx.fillRect(\r\n            this.p1Map[0].x - this.homeSize/4, this.p1Map[0].y - this.homeSize/4,\r\n            this.homeSize*2 + this.homeSize/2, this.homeSize*3 + this.homeSize/2);\r\n        this.ctx.globalAlpha = 1;\r\n      } else if (this.moveSelected == \"attack\") {\r\n        this.ctx.globalAlpha = 0.2;\r\n        this.ctx.fillStyle = colorCode.attackArena;\r\n        this.ctx.fillRect(\r\n            this.p2Map[0].x - this.homeSize/4, this.p2Map[0].y - this.homeSize/4,\r\n            this.homeSize*2 + this.homeSize/2, this.homeSize*3 + this.homeSize/2);\r\n        this.ctx.globalAlpha = 1;\r\n\r\n      }\r\n\r\n      if (\r\n        (this.moveSelected == \"attack\" && this.activeCells.length == 1) ||\r\n        (this.moveSelected == \"build\" && this.activeCells.length == 2)\r\n      ) {\r\n        this.validMove = true;\r\n      } else this.validMove = false;\r\n\r\n      if (this.activeMap) {\r\n        this.detectHover(this.activeMap);\r\n        if (this.activeCells.length < 2) this.elegibleToConnect(this.p1Map);\r\n        else {\r\n          this.renderPotentialConnection();\r\n        }\r\n      }\r\n\r\n      this.arrayMapToPixelMap(this.p1Map, this.p1MapOffset.i, this.p1MapOffset.j);\r\n      this.arrayMapToPixelMap(this.p2Map, this.p2MapOffset.i, this.p2MapOffset.j);\r\n      this.renderConnection(this.p1Map);\r\n      this.renderConnection(this.p2Map);\r\n      this.renderMap(this.p1Map);\r\n      this.renderMap(this.p2Map);\r\n\r\n      if (this.returnFlag) this.renderSafeSqares();\r\n      if (this.p2Position) {\r\n        const p2 = this.p2Map[this.p2Position.i * 2 + this.p2Position.j];\r\n        if (!p2.destroyed)this.ctx.drawImage(this.bunkerSS,\r\n          this.bunkerImgSize*4, 0, this.bunkerImgSize, this.bunkerImgSize,\r\n           p2.x, p2.y, p2.w, p2.h)\r\n      }\r\n\r\n\r\n      this.now = Date.now();\r\n      if (this.now - this.then > 100) {\r\n        this.then = this.now;\r\n        \r\n        \r\n        if (this.asteroidY > 0) this.actx.clearRect(0, 0, this.cWidth, this.cHeight)\r\n        this.actx.drawImage(this.asteroidSS,\r\n        this.asteroidSize*this.asteroidJ, 0, this.asteroidSize, this.asteroidSize,\r\n        this.asteroidX, this.asteroidY, this.asteroidSize, this.asteroidSize )\r\n        this.asteroidJ++;\r\n\r\n        if (this.asteroidJ > 3) this.asteroidJ = 0;\r\n\r\n      }\r\n      \r\n      window.requestAnimationFrame(this.animate);\r\n    },\r\n  },\r\n\r\n\r\n  created() {\r\n    \r\n    this.$nextTick(() => {\r\n      this.asteroidSS.src = require(\"../assets/boltSpriteSheetV.png\");\r\n      this.bunkerSS.src = require(\"../assets/BunkerSS.png\");\r\n      this.explosionSS.src= require(\"../assets/explosion.png\")\r\n      this.backgroundSS.src = require(\"../assets/gbackground.png\");\r\n      \r\n\r\n      Promise.all(Array.from([this.asteroidSS, this.bunkerSS, this.explosionSS, this.backgroundSS]).filter(img => !img.complete).map(img => new Promise(resolve => { img.onload = img.onerror = resolve; }))).then(() => {\r\n        console.log('images finished loading');\r\n        this.socketinit();\r\n        this.exploasionImageSize = this.explosionSS.width/18;\r\n        this.bunkerImgSize = this.bunkerSS.width/8;\r\n        this.init();\r\n    });\r\n    });\r\n  },\r\n\r\n  mixins: [\r\n    mapMixins,\r\n    socketMixins,\r\n    eventHandlerMixins,\r\n    renderWSmixins,\r\n    connectionRelatedMixins,\r\n    cellMixins,\r\n  ],\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.game-outer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 4rem;\r\n}\r\n\r\n.asteroid-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n  pointer-events: none; \r\n}\r\n\r\n.contoller {\r\n  position: absolute;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  bottom: 2vh;\r\n}\r\n\r\nbutton {\r\n  background: rgb(0, 191, 255);\r\n  border: none;\r\n  padding: 1rem 2rem;\r\n  margin: 0 1rem;\r\n}\r\n.instruction-wrapper {\r\n  position: relative;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: lightgray ;\r\n}\r\n\r\n.gameOver {\r\n  position: absolute;\r\n  width: 100vw;\r\n  height: 70vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 10;\r\n}\r\n\r\n.center-div {\r\n  padding: 0 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  align-items: center;\r\n  background: hsl(0 0% 100% / 0.1);\r\n  backdrop-filter: blur(1rem);\r\n  height: 50vh;\r\n  justify-content: space-around;\r\n}\r\n\r\n.instruction-text {\r\n  padding: 1rem;\r\n  width: 40%;\r\n  position: absolute;\r\n  top: 2%;\r\n  left: 30%;\r\n  color: rgb(145, 145, 145);\r\n  font-size: 1rem;\r\n  font-weight: thin;\r\n  text-align: center;\r\n}\r\n\r\n.winText {\r\n  font-size: 2rem;\r\n  color: white;\r\n}\r\n\r\n@media (max-width: 700px) {\r\n  .center-div {\r\n    padding: 1rem;\r\n  }\r\n  .game-outer {\r\n    padding: 2rem;\r\n  }\r\n\r\n  .winText {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .contoller > button {\r\n    margin: 0 0.25rem;\r\n    padding: 0.3rem 1rem;\r\n\r\n  }\r\n  \r\n  .instruction-text {\r\n    top: 50%;\r\n    left: 0;\r\n    font-size: 0.75rem;\r\n    font-weight: thin;\r\n    text-align: left;\r\n  }\r\n\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TurnBasedGame.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TurnBasedGame.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TurnBasedGame.vue?vue&type=template&id=81fb0c9c&scoped=true&\"\nimport script from \"./TurnBasedGame.vue?vue&type=script&lang=js&\"\nexport * from \"./TurnBasedGame.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TurnBasedGame.vue?vue&type=style&index=0&id=81fb0c9c&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"81fb0c9c\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"outer\">\r\n        <TurnBasedGameVue/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import TurnBasedGameVue from '@/components/TurnBasedGame.vue';\r\n    export default {\r\n        components: {\r\n            TurnBasedGameVue\r\n        },\r\n\r\n        computed: {\r\n            id(){\r\n                return this.$store.state.user.id;\r\n            },\r\n            name() {\r\n                return this.$store.state.user.name;\r\n            },\r\n            isAuthenticated() {\r\n                return this.$store.state.isAuthenticated\r\n            },\r\n        },\r\n\r\n        methods: {\r\n            logout() {\r\n                this.$store.commit(\"logout\");\r\n            },\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .outer {\r\n        \r\n        background: rgb(238, 247, 255);\r\n    }\r\n\r\n    h1 {\r\n        position: relative 0 auto;\r\n    }\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GameView.vue?vue&type=template&id=47f426e0&scoped=true&\"\nimport script from \"./GameView.vue?vue&type=script&lang=js&\"\nexport * from \"./GameView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GameView.vue?vue&type=style&index=0&id=47f426e0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"47f426e0\",\n  null\n  \n)\n\nexport default component.exports","var makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n"],"names":["render","_vm","this","_c","_self","staticClass","staticRenderFns","directives","name","rawName","value","gameEnded","expression","_v","_s","endText","attrs","mode","lobbyCode","_e","start","ref","instructionText","yourTurn","moveSelected","canNotBuild","on","buildingMode","attackingMode","validMove","go","background","existsColor","notDestroyedColor","destroedColor","buildArena","attackArena","hovering","selected","potentialSelect","player","safeSquare","normal","seletected","methods","renderMap","map","j","length","forEach","cell","destroyed","status","blockStates","ctx","drawImage","bunkerSS","bunkerImgSize","x","y","w","h","p1Map","playerPostion","i","globalAlpha","resetMapStatus","pixelMap","activeCells","arrayMapToPixelMap","homeSize","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","alphabet","prev","seed","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","pause","onPause","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","undefined","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","buf","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","handshake","p2Details","p2Disconnected","upDateState","updateP2","socketinit","socketio","emitNames","p1Name","p1Email","matched","p2Name","p2","p1Data","p2Map","p2Data","position","console","log","attackData","gameOver","lastAttackedSquare","rect","left","top","asteroidAcceleration","afterAttackAnimationData","explosionJ","explosionX","explosionY","explosionW","explosionH","animateAttack","p2Position","clickHandler","returnFlag","safeSquares","ss","attackingSquare","clickedCell","ac","activeClicked","activeCell","rednerWaitinScreen","offSet","waitingCanvas","getBoundingClientRect","fontSize","cWidth","wctx","font","fillStyle","fillRect","cHeight","fillText","elegibleToConnect","dx","dy","nx","ny","renderConnection","b1","adj","con","b2","renderPotentialConnection","c1","c2","colorCode","detectHover","mousePosition","renderSafeSqares","generateSafeSqare","visited","includes","initiateReturn","gameCanvas","asteroidCanvas","actx","exploasionImageSize","asteroidSS","explosionSS","backgroundSS","p1MapOffset","p2MapOffset","attackCell","activeMap","asteroidX","asteroidY","asteroidSize","asteroidJ","asteroidsVelocity","explosionFrameId","explosionNow","explosionThen","astroidAnimationId","computed","init","initDimentions","explosionAnimation","animate","created","img","mixins","mapMixins","socketMixins","eventHandlerMixins","renderWSmixins","connectionRelatedMixins","cellMixins","component","components","TurnBasedGameVue","isAuthenticated","logout","makeBuiltIn","defineProperty","module","exports","target","descriptor","get","getter","set","setter","f","anObject","that","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","FORCED","INDICES_SUPPORT","O","calls","expected","addGetter","chr","getOwnPropertyDescriptor","configurable"],"sourceRoot":""}